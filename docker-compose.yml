services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "3001:3000"
    networks:
      - app-network
    env_file:
      - ./backend/.env
    depends_on:
      - database
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3002:80"
    networks:
      - app-network

  database:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: UserTevent
      POSTGRES_PASSWORD: 200565
      POSTGRES_DB: TeventDB
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

  nginx-proxy-manager:
    image: jc21/nginx-proxy-manager:latest
    container_name: nginx-proxy-manager
    ports:
      - "80:80"   
      - "81:81"    
      - "443:443"  
    volumes:
      - nginx-data:/data
      - nginx-letsencrypt:/etc/letsencrypt
    restart: always
    networks:
      - app-network

volumes:
  postgres-data:
  nginx-data:
  nginx-letsencrypt:

networks:
  app-network:
    driver: bridge
